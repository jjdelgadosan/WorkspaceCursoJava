package colecciones;

import java.util.ArrayList;

public class MainColecciones {

	public static void main(String[] args) {
		ArrayList<String> listaNombres = new ArrayList<String>();
		listaNombres.add("Mortadelo");
		listaNombres.add("Filemon");
		listaNombres.add("Dr. Bacterio");
		listaNombres.add("Ofelia");
		listaNombres.add("Super intendente Vicente");
		
		System.out.println(listaNombres.get(0)); //Mortadelo
		System.out.println(listaNombres.get(3)); //Ofelia
		System.out.println(listaNombres.size()); // 5
		
		System.out.println("**********************");
		
		for (int i = 0; i < listaNombres.size();i++) {
			System.out.println(listaNombres.get(i)); //manera mala de recorrer array
			
		}	
		
		System.out.println("**********************");
// manera buena de recorrer un array FOR EACH
// la primera parte hay que declarar una variable dentro del for del mismo tipo que la lista que queremos recorrer
// las segunda parte es la lista que queremos recorrer
		for (String valor : listaNombres) { 
			
			System.out.println(valor);
		
		}
		
		System.out.println("Array de enteros");
// si queremos crear un array de enteros debemos de usar su correspondiente tipo wrapper (envoltorio)
// Todos los primitivos tienen su tipo wrapper
		
		Integer entero = new Integer(4); 
		Integer entero2 = 5; //auto boxing ==> te lo convierte a objeto directamente. 
		
		double primitivoDouble = 6.9;
		Double objetoDouble = 6.9;
		
		ArrayList<Integer> listaEnteros = new ArrayList<Integer>();
		listaEnteros.add(1);
		listaEnteros.add(45);
		listaEnteros.add(new Integer(89));
		
		System.out.println(listaEnteros);
		
		for (Integer v : listaEnteros) {
			System.out.println(v);
			
		}
	}

}
